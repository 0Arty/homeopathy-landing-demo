@charset "UTF-8";
*,
::before,
::after {
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

:where(ul, ol):where([class]) {
  padding-left: 0;
}

:where(ul[class]) {
  list-style: none;
}

:where(address[class]) {
  font-style: normal;
}

:where(h1,
h2,
h3,
h4,
h5,
h6,
p,
ul,
ol,
dl):where([class]) {
  margin-block: 0;
}

html {
  height: 100dvh;
}

html,
:has(:target) {
  scroll-behavior: smooth;
}

@media screen and (max-width: 48rem) {
  html {
    scroll-behavior: auto;
  }
}

p {
  margin-block: 0;
}

img,
video {
  display: block;
  max-width: 100%;
  max-height: 100%;
  height: auto;
}

img {
  -o-object-fit: scale-down;
  object-fit: scale-down;
}

input,
textarea,
select,
button {
  font: inherit;
  border: none;
  outline: none;
  cursor: pointer;
}

button {
  background-color: transparent;
  outline: none;
  border: none;
}

button,
label {
  cursor: pointer;
}

svg * {
  -webkit-transition-property: fill, stroke;
  transition-property: fill, stroke;
}

button {
  background-color: transparent;
  outline: none;
  border: none;
}

@media (prefers-reduced-motion: reduce) {
  *,
  ::before,
  ::after {
    -webkit-animation-duration: 0.01ms !important;
    animation-duration: 0.01ms !important;
    -webkit-animation-iteration-count: 1 !important;
    animation-iteration-count: 1 !important;
    -webkit-transition-duration: 0.01ms !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}
@font-face {
  font-family: "FONTS-Name";
  src: url("../fonts/PATH.woff2") format("woff2");
  font-weight: 400;
  font-style: normal;
  font-display: swap;
}
:root {
  --transition-duration: 0.2s;
  --base-color: var(--dark-100);
  --base-font-size: rem(16);
  --base-font-family: var(--inter);
  --color-light: var(--grass-green);
  --instrument: "Instrument Serif", serif;
  --inter: "Inter", sans-serif;
  --layer-top-header: 1000;
  --layer-top: 950;
  --dark-100: #1E1E1EFF;
  --dark-90: #585858FF;
  --dark-80: #DCDCDCFF;
  --gray: #F6F6F6FF;
  --badge: #F6F2E5FF;
  --purple: #C9D3F8FF;
  --green: #396B61FF;
  --white: #FFFFFFFF;
  --grass-green: #63CA78FF;
}

h1 {
  color: var(--White, #FFF);
  font-family: var(--instrument);
  font-size: 4.875rem;
  font-style: normal;
  font-weight: 400;
  line-height: 120%;
}
@media (width <= 47.99875rem) {
  h1 {
    font-size: 3rem;
    line-height: 100%;
    letter-spacing: 0.03rem;
  }
}

h2 {
  color: var(--dark-100, #1E1E1E);
  font-size: 3rem;
  font-style: normal;
  font-weight: 400;
  line-height: 100%;
  /* 3rem */
  letter-spacing: 0.03rem;
  font-family: var(--instrument);
}
@media (width <= 47.99875rem) {
  h2 {
    font-size: 2.25rem;
    font-style: normal;
    font-weight: 400;
    line-height: 100%;
    /* 2.25rem */
    letter-spacing: 0.0225rem;
  }
}

h3 {
  color: var(--dark-100, #1E1E1E);
  /* H3 */
  font-family: var(--inter);
  font-size: 1.625rem;
  font-style: normal;
  font-weight: 500;
  line-height: 130%;
  /* 2.1125rem */
  letter-spacing: -0.04063rem;
}
@media (width <= 47.99875rem) {
  h3 {
    font-size: 1.375rem;
    letter-spacing: -0.0275rem;
  }
}

h4 {
  color: var(--white, #FFF);
  font-family: var(--inter);
  font-size: 1.25rem;
  font-style: normal;
  font-weight: 500;
  line-height: 130%;
  /* 26px */
  letter-spacing: -0.025rem;
}

a,
button,
label,
input,
textarea,
select,
svg * {
  -webkit-transition-duration: var(--transition-duration);
  transition-duration: var(--transition-duration);
}

html {
  scroll-padding-top: 8.75rem;
}
@media (width <= 47.99875rem) {
  html {
    scroll-padding-top: 5.5rem;
  }
}

body {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  min-height: 100dvh;
  font-size: var(--base-font-family);
  color: var(--dark-90, #585858);
  font-family: Inter;
  font-size: 1.0625rem;
  font-style: normal;
  font-weight: 400;
  line-height: 130%;
  /* 1.38125rem */
  letter-spacing: -0.01063rem;
}
body main {
  -webkit-box-flex: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
}
body.overflow-hidden {
  overflow: hidden;
}

a {
  color: inherit;
}
a[class] {
  text-decoration: none;
}

:focus-visible {
  outline: 0.125rem dashed var(--color-light);
  outline-offset: 0.25rem;
  -webkit-transition-duration: 0s !important;
  transition-duration: 0s !important;
}

.header {
  width: 100%;
  position: fixed;
  top: 0;
  z-index: 1000;
  padding: 0.5rem 0;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-transition: 0.4s ease all;
  transition: 0.4s ease all;
}
.header:before {
  position: absolute;
  -webkit-transition: 0.4s ease all;
  transition: 0.4s ease all;
  inset: 0;
  content: "";
  background: -webkit-gradient(linear, left top, left bottom, from(rgba(0, 0, 0, 0.25)), to(rgba(0, 0, 0, 0)));
  background: linear-gradient(180deg, rgba(0, 0, 0, 0.25), rgba(0, 0, 0, 0));
  opacity: 0;
}
.header.scrolled {
  -webkit-backdrop-filter: blur(0.1875rem);
  backdrop-filter: blur(0.1875rem);
}
.header.scrolled:before {
  opacity: 1;
}
@media (width <= 47.99875rem) {
  .header {
    padding: 1rem 0;
  }
}
.header__container {
  width: 100%;
  max-width: 97rem;
  margin-inline: auto;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: justify;
  -ms-flex-pack: justify;
  justify-content: space-between;
  gap: 3rem;
  position: relative;
  z-index: 2;
}
@media screen and (max-width: calc(97rem + 4rem + 4rem)) {
  .header__container {
    width: calc(100% - 4rem * 2);
  }
}
@media screen and (max-width: 76.25rem) {
  .header__container {
    width: calc(100% - 1rem * 2);
  }
}
.header__container .logo {
  width: 10.625rem;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  justify-content: center;
}
@media (hover: hover) {
  .header__container .logo:hover {
    cursor: pointer;
  }
  .header__container .logo:hover svg {
    -webkit-transition: 0.4s ease all;
    transition: 0.4s ease all;
    color: var(--purple);
  }
}
.header__container .logo:focus-visible svg {
  -webkit-transition: 0.4s ease all;
  transition: 0.4s ease all;
  color: var(--purple);
}
.header__container .logo svg {
  width: 100%;
  height: auto;
  color: var(--white);
}
.header__container .logo svg [fill] {
  fill: currentColor;
}
@media (width <= 47.99875rem) {
  .header__container .logo {
    width: 9.375rem;
  }
}
.header__container .group {
  padding: 0.5rem 0.5rem 0.5rem 2rem;
  border-radius: 6.25rem;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  gap: 2rem;
  background: var(--white, #FFF);
}
@media (width <= 47.99875rem) {
  .header__container .group {
    display: none;
  }
}
.header__container .group nav {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
}
.header__container .group nav ul {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  padding: 0;
  list-style-type: none;
  gap: 1.5rem;
}
.header__container .group nav ul li {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
}
.header__container .group nav ul li a {
  text-decoration: none;
  font-family: var(--inter);
  font-size: 1.0625rem;
  font-style: normal;
  font-weight: 500;
  line-height: 130%;
  /* 22.1px */
  letter-spacing: -0.010625rem;
  color: var(--dark-100);
}
@media (hover: hover) {
  .header__container .group nav ul li a:hover {
    cursor: pointer;
    color: var(--dark-90);
  }
}
.header__container .group nav ul li a:focus-visible {
  color: var(--dark-90);
}
.header__container .mobile {
  display: none;
}
@media (width <= 47.99875rem) {
  .header__container .mobile {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    position: relative;
  }
}
.header__container .mobile .btn {
  width: 2.5rem;
  height: 2.5rem;
  overflow: hidden;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  justify-content: center;
  background-color: var(--white);
  border-radius: 100%;
  position: relative;
}
@media (hover: hover) {
  .header__container .mobile .btn:hover {
    cursor: pointer;
  }
  .header__container .mobile .btn:hover .toggle .icon svg {
    color: var(--dark-90);
  }
}
.header__container .mobile .btn:focus-visible .toggle .icon svg {
  color: var(--dark-90);
}
.header__container .mobile .btn.open .toggle {
  -webkit-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  transform: translateY(-50%);
}
.header__container .mobile .btn .toggle {
  -webkit-transition: 0.4s all ease-out;
  transition: 0.4s all ease-out;
  position: absolute;
  left: 0;
  top: 0;
  width: 100%;
  height: 200%;
  display: grid;
  grid-template-columns: 1fr;
  grid-template-rows: 1fr 1fr;
  gap: 0;
}
.header__container .mobile .btn .toggle .icon {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  justify-content: center;
}
.header__container .mobile .btn .toggle .icon svg {
  -webkit-transition: 0.4s ease all;
  transition: 0.4s ease all;
  color: var(--dark-100);
}
.header__container .mobile .btn .toggle .icon svg [fill] {
  fill: currentColor;
}

.footer {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  width: 100%;
  max-width: 105rem;
  margin-inline: auto;
  background: #BFC8E0;
  padding-top: 5rem;
}
.footer__grid {
  width: 100%;
  max-width: 97rem;
  margin-inline: auto;
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: 1.25rem;
}
@media screen and (max-width: calc(97rem + 4rem + 4rem)) {
  .footer__grid {
    width: calc(100% - 4rem * 2);
  }
}
@media screen and (max-width: 76.25rem) {
  .footer__grid {
    width: calc(100% - 1rem * 2);
  }
}
@media (width <= 47.99875rem) {
  .footer__grid {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
    -ms-flex-direction: column;
    flex-direction: column;
    gap: 2rem;
  }
}
.footer__grid .left {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
}
.footer__grid .left svg {
  width: 13.4375rem;
  height: auto;
}
@media (width <= 47.99875rem) {
  .footer__grid .left svg {
    width: 13.4375rem;
  }
}
.footer__grid .right {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
}
.footer__grid .right .grid {
  display: grid;
  grid-template-columns: repeat(6, 1fr);
  gap: 1.25rem;
}
@media (width <= 47.99875rem) {
  .footer__grid .right .grid {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
    -ms-flex-direction: column;
    flex-direction: column;
  }
}
.footer__grid .right .grid h2 {
  grid-column: 1/span 4;
  font-family: var(--instrument);
  font-size: 3rem;
  font-style: normal;
  font-weight: 400;
  line-height: 100%;
  /* 3rem */
  letter-spacing: 0.03rem;
}
@media (width <= 47.99875rem) {
  .footer__grid .right .grid h2 {
    font-size: 2.25rem;
    font-style: normal;
    font-weight: 400;
    line-height: 100%;
    /* 2.25rem */
    letter-spacing: 0.0225rem;
  }
}
.footer__grid .right .book {
  margin-top: 1rem;
  grid-column: 1/span 6;
  width: -webkit-fit-content;
  width: -moz-fit-content;
  width: fit-content;
  padding: 1rem 1.5rem;
  background: var(--white, #FFF);
  color: var(--dark-100, #1E1E1E);
  /* Body M – Medium */
  font-family: var(--inter);
  font-size: 1.0625rem;
  font-style: normal;
  font-weight: 500;
  line-height: 130%;
  /* 1.38125rem */
  letter-spacing: -0.01063rem;
  border-radius: 4rem;
}
@media (width <= 47.99875rem) {
  .footer__grid .right .book {
    width: 100%;
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    -webkit-box-pack: center;
    -ms-flex-pack: center;
    justify-content: center;
    margin-top: 1.5rem;
  }
}
@media (hover: hover) {
  .footer__grid .right .book:hover {
    cursor: pointer;
    background: rgba(255, 255, 255, 0.72);
  }
}
.footer__grid .right .book:focus-visible {
  background: rgba(255, 255, 255, 0.72);
}
.footer__grid .right .grid.info {
  grid-template-columns: 4fr 2fr;
  margin-top: 3.5rem;
}
@media (width <= 47.99875rem) {
  .footer__grid .right .grid.info {
    margin-top: 2rem;
  }
}
.footer__grid .right .grid.info .information {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  gap: 1rem;
}
.footer__grid .right .grid.info .information .item {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  gap: 0.75rem;
}
.footer__grid .right .grid.info .information .item h5 {
  color: rgba(30, 30, 30, 0.4);
  /* Body M – Regular */
  font-family: Inter;
  font-size: 1.0625rem;
  font-style: normal;
  font-weight: 400;
  line-height: 130%;
  /* 1.38125rem */
  letter-spacing: -0.01063rem;
}
.footer__grid .right .grid.info .information .item p {
  color: var(--dark-100, #1E1E1E);
  /* Body M – Regular */
  font-family: Inter;
  font-size: 1.0625rem;
  font-style: normal;
  font-weight: 400;
  line-height: 130%;
  /* 1.38125rem */
  letter-spacing: -0.01063rem;
}
.footer__grid .right .grid.info .information .item p a {
  text-decoration-line: underline;
  text-decoration-style: solid;
  -webkit-text-decoration-skip-ink: none;
  text-decoration-skip-ink: none;
  text-decoration-thickness: auto;
  text-underline-offset: auto;
  text-underline-position: from-font;
}
@media (hover: hover) {
  .footer__grid .right .grid.info .information .item p a:hover {
    cursor: pointer;
    color: var(--dark-90);
  }
}
.footer__grid .right .grid.info .information .item p a:focus-visible {
  color: var(--dark-90);
}
.footer__grid .right .grid.info .follow {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  gap: 0.75rem;
}
.footer__grid .right .grid.info .follow h5 {
  color: rgba(30, 30, 30, 0.4);
  text-align: right;
  /* Body M – Regular */
  font-family: Inter;
  font-size: 1.0625rem;
  font-style: normal;
  font-weight: 400;
  line-height: 130%;
  /* 1.38125rem */
  letter-spacing: -0.01063rem;
}
@media (width <= 47.99875rem) {
  .footer__grid .right .grid.info .follow h5 {
    text-align: left;
  }
}
.footer__grid .right .grid.info .follow .links {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  gap: 0.62rem;
  -webkit-box-pack: end;
  -ms-flex-pack: end;
  justify-content: end;
}
@media (width <= 47.99875rem) {
  .footer__grid .right .grid.info .follow .links {
    -webkit-box-pack: start;
    -ms-flex-pack: start;
    justify-content: start;
  }
}
.footer__grid .right .grid.info .follow .links .link {
  width: 3.375rem;
  height: 3.375rem;
  border-radius: 100%;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  justify-content: center;
  border-radius: 4rem;
  background: rgba(255, 255, 255, 0.24);
}
@media (hover: hover) {
  .footer__grid .right .grid.info .follow .links .link:hover {
    cursor: pointer;
    background-color: var(--white);
  }
}
.footer__grid .right .grid.info .follow .links .link:focus-visible {
  background-color: var(--white);
}
.footer__privacy {
  width: 100%;
  max-width: 97rem;
  margin-inline: auto;
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: 1.25rem;
  margin-top: 5.19rem;
}
@media screen and (max-width: calc(97rem + 4rem + 4rem)) {
  .footer__privacy {
    width: calc(100% - 4rem * 2);
  }
}
@media screen and (max-width: 76.25rem) {
  .footer__privacy {
    width: calc(100% - 1rem * 2);
  }
}
@media (width <= 47.99875rem) {
  .footer__privacy {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
    -ms-flex-direction: column;
    flex-direction: column;
    margin-top: 2.06rem;
    gap: 0.5rem;
  }
}
.footer__privacy .block {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
}
.footer__privacy .block .reserved {
  color: rgba(30, 30, 30, 0.4);
  /* Bode XS */
  font-family: var(--inter);
  font-size: 0.8125rem;
  font-style: normal;
  font-weight: 400;
  line-height: 130%;
  /* 1.05625rem */
  letter-spacing: -0.00813rem;
}
.footer__privacy .privacy {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  gap: 2.81rem;
}
@media (width <= 47.99875rem) {
  .footer__privacy .privacy {
    gap: 1.5rem;
  }
}
.footer__privacy .privacy .open {
  color: var(--dark-100, #1E1E1E);
  opacity: 0.4;
  /* Bode XS */
  font-family: Inter;
  font-size: 0.8125rem;
  font-style: normal;
  font-weight: 400;
  line-height: 130%;
  /* 1.05625rem */
  letter-spacing: -0.00813rem;
}
@media (hover: hover) {
  .footer__privacy .privacy .open:hover {
    cursor: pointer;
    opacity: 1;
  }
}
.footer__privacy .privacy .open:focus-visible {
  opacity: 1;
}
.footer .line {
  width: 100%;
  height: 0.0625rem;
  background: rgba(30, 30, 30, 0.16);
  margin-top: 1.5rem;
}
.footer .post-scriptum {
  width: 100%;
  max-width: 97rem;
  margin-inline: auto;
  padding: 1.5rem 0;
}
@media screen and (max-width: calc(97rem + 4rem + 4rem)) {
  .footer .post-scriptum {
    width: calc(100% - 4rem * 2);
  }
}
@media screen and (max-width: 76.25rem) {
  .footer .post-scriptum {
    width: calc(100% - 1rem * 2);
  }
}
.footer .post-scriptum p {
  color: rgba(30, 30, 30, 0.4);
  /* Bode XS */
  font-family: var(--inter);
  font-size: 0.8125rem;
  font-style: normal;
  font-weight: 400;
  line-height: 130%; /* 1.05625rem */
  letter-spacing: -0.00813rem;
}

.google-rating-with-bg {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  gap: 0.5rem;
  -webkit-box-flex: 0;
  -ms-flex-positive: 0;
  flex-grow: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  width: -webkit-fit-content;
  width: -moz-fit-content;
  width: fit-content;
  padding: 0.5rem 1rem 0.5rem 0.5rem;
  border-radius: 6.25rem;
  background: rgba(255, 255, 255, 0.24);
  -webkit-backdrop-filter: blur(0.125rem);
  backdrop-filter: blur(0.125rem);
  -webkit-transition: 0.4s ease all;
  transition: 0.4s ease all;
}
@media (hover: hover) {
  .google-rating-with-bg:hover {
    cursor: pointer;
    background: rgba(255, 255, 255, 0.32);
    -webkit-backdrop-filter: blur(0.25rem);
    backdrop-filter: blur(0.25rem);
  }
}
.google-rating-with-bg:focus-visible {
  background: rgba(255, 255, 255, 0.32);
  -webkit-backdrop-filter: blur(0.25rem);
  backdrop-filter: blur(0.25rem);
}
.google-rating-with-bg img {
  width: 1.5rem;
  height: 1.5rem;
  -o-object-fit: scale-down;
  object-fit: scale-down;
  aspect-ratio: 1/1;
  -webkit-box-flex: 0;
  -ms-flex-positive: 0;
  flex-grow: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}
.google-rating-with-bg .rating {
  color: var(--white);
  font-family: var(--inter);
  font-size: 0.75rem;
  font-style: normal;
  font-weight: 500;
  line-height: 100%;
  /* 22.1px */
  letter-spacing: 0.045rem;
  text-transform: uppercase;
}
.google-rating-with-bg .stars {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  gap: 0.125rem;
}
.google-rating-with-bg svg {
  width: 0.8125rem;
  height: 0.75rem;
}

.menu-modal {
  position: fixed;
  left: 0;
  top: 0;
  height: 100dvh;
  width: 100%;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  background: rgba(0, 0, 0, 0.4);
}
.menu-modal__content {
  width: calc(100% - 4rem - 1rem);
  margin-left: auto;
  margin-right: 4rem;
  margin-top: 1rem;
  max-width: 19.5625rem;
  background-color: white;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  gap: 1.5rem;
  padding: 2rem 0.5rem;
  border-radius: 1.5rem;
}
.menu-modal__content .go-to-link {
  text-decoration: none;
  font-family: var(--inter);
  font-size: 1.0625rem;
  font-style: normal;
  font-weight: 500;
  line-height: 130%;
  /* 22.1px */
  letter-spacing: -0.010625rem;
  color: var(--dark-100);
}
@media (hover: hover) {
  .menu-modal__content .go-to-link:hover {
    cursor: pointer;
    color: var(--dark-90);
  }
}
.menu-modal__content .go-to-link:focus-visible {
  color: var(--dark-90);
}
.menu-modal__content .menu-btn {
  width: -webkit-fit-content;
  width: -moz-fit-content;
  width: fit-content;
}

.services-block {
  width: 100%;
  max-width: 97rem;
  margin-inline: auto;
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: 1.25rem;
}
@media screen and (max-width: calc(97rem + 4rem + 4rem)) {
  .services-block {
    width: calc(100% - 4rem * 2);
  }
}
@media screen and (max-width: 76.25rem) {
  .services-block {
    width: calc(100% - 1rem * 2);
  }
}
@media (width <= 47.99875rem) {
  .services-block {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
    -ms-flex-direction: column;
    flex-direction: column;
    gap: 1rem;
  }
  .services-block .services-block__text {
    -webkit-box-ordinal-group: 3;
    -ms-flex-order: 2;
    order: 2;
  }
  .services-block .services-block__image {
    -webkit-box-ordinal-group: 2;
    -ms-flex-order: 1;
    order: 1;
  }
}
.services-block.right .services-block__text {
  -webkit-box-ordinal-group: 3;
  -ms-flex-order: 2;
  order: 2;
}
.services-block.right .services-block__text .container {
  grid-column: 2/span 5;
}
@media (width <= 63.99875rem) {
  .services-block.right .services-block__text .container {
    grid-column: 1/span 6;
  }
}
.services-block.right .services-block__image {
  -webkit-box-ordinal-group: 2;
  -ms-flex-order: 1;
  order: 1;
}
.services-block__image {
  -webkit-box-ordinal-group: 3;
  -ms-flex-order: 2;
  order: 2;
  min-height: 44.0625rem;
}
@media (width <= 47.99875rem) {
  .services-block__image {
    min-height: 0;
  }
}
.services-block__image img {
  width: 100%;
  -o-object-fit: cover;
  object-fit: cover;
  height: 100%;
  border-radius: 1rem;
}
@media (width <= 47.99875rem) {
  .services-block__image img {
    aspect-ratio: 361/240;
    height: auto;
  }
}
.services-block__text {
  -webkit-box-ordinal-group: 2;
  -ms-flex-order: 1;
  order: 1;
  display: grid;
  grid-template-columns: repeat(6, 1fr);
  gap: 1.25rem;
}
@media (width <= 47.99875rem) {
  .services-block__text {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
    -ms-flex-direction: column;
    flex-direction: column;
  }
}
.services-block__text .container {
  grid-column: 1/span 5;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  --gap-block: 2rem;
}
@media (width <= 63.99875rem) {
  .services-block__text .container {
    grid-column: 1/span 6;
  }
}
@media (width <= 47.99875rem) {
  .services-block__text .container {
    --gap-block: 1.5rem;
  }
}
.services-block__text .container h3 {
  max-width: 23.3125rem;
}
@media (width <= 47.99875rem) {
  .services-block__text .container h3 {
    display: none;
  }
}
.services-block__text .container > p {
  margin-top: var(--gap-block);
  font-family: var(--inter);
  font-size: 1.0625rem;
  font-style: normal;
  font-weight: 500;
  line-height: 130%;
  /* 22.1px */
  letter-spacing: -0.010625rem;
  color: var(--dark-100);
  font-weight: 400;
}
@media (width <= 47.99875rem) {
  .services-block__text .container > p {
    margin-top: 0;
  }
}
.services-block__text .container .mobile-toggle-list {
  display: none;
  margin-top: var(--gap-block);
}
@media (width <= 47.99875rem) {
  .services-block__text .container .mobile-toggle-list {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    -webkit-box-pack: center;
    -ms-flex-pack: center;
    justify-content: center;
    gap: 0.5rem;
  }
}
.services-block__text .container .mobile-toggle-list .text {
  text-decoration: underline;
  font-family: var(--inter);
  font-size: 1.0625rem;
  font-style: normal;
  font-weight: 500;
  line-height: 130%;
  /* 22.1px */
  letter-spacing: -0.010625rem;
  color: var(--dark-100);
}
.services-block__text .container .mobile-toggle-list svg {
  -webkit-transition: 0.4s ease all;
  transition: 0.4s ease all;
  -webkit-transform-origin: center center;
  -ms-transform-origin: center center;
  transform-origin: center center;
}
.services-block__text .container .mobile-toggle-list.open svg {
  rotate: 180deg;
}
.services-block__text .container .ui-services-list {
  padding-top: var(--gap-block);
}
.services-block__text .button__container {
  display: grid;
  grid-template-columns: repeat(5, 1fr);
  gap: 1.25rem;
  margin-top: var(--gap-block);
}
@media (width <= 47.99875rem) {
  .services-block__text .button__container {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
    -ms-flex-direction: column;
    flex-direction: column;
    width: 100%;
  }
}
.services-block__text .button__container .link {
  grid-column: 1/span 2;
  padding: 1rem 1.5rem;
  text-wrap: nowrap;
  min-width: -webkit-fit-content;
  min-width: -moz-fit-content;
  min-width: fit-content;
}
@media (width <= 47.99875rem) {
  .services-block__text .button__container .link {
    width: 100%;
    grid-column: auto;
  }
}
.services-block .title__mobile {
  display: none;
}
@media (width <= 47.99875rem) {
  .services-block .title__mobile {
    display: block;
  }
}

.real-stories-slider-container {
  width: 100%;
  max-width: 97rem;
  margin-inline: auto;
  position: relative;
  overflow: hidden;
  margin-top: 1.875rem;
}
@media screen and (max-width: calc(97rem + 4rem + 4rem)) {
  .real-stories-slider-container {
    width: calc(100% - 4rem * 2);
  }
}
@media screen and (max-width: 76.25rem) {
  .real-stories-slider-container {
    width: calc(100% - 1rem * 2);
  }
}
@media (width <= 63.99875rem) {
  .real-stories-slider-container {
    width: 100%;
    max-width: unset;
    margin-inline: 0;
  }
}
@media (width <= 47.99875rem) {
  .real-stories-slider-container {
    margin-top: 2rem;
  }
}
.real-stories-slider-container .real-stories-slider {
  width: 100%;
}
@media (width <= 63.99875rem) {
  .real-stories-slider-container .real-stories-slider .swiper-slide {
    max-width: 31.5rem;
    width: calc(100vw - 1rem - 1rem - 2.3125rem);
  }
}
.real-stories-slider-container .real-stories-slider__controls {
  margin-top: 3.5rem;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  justify-content: center;
  border-radius: 64px;
  margin-inline: auto;
  width: -webkit-fit-content;
  width: -moz-fit-content;
  width: fit-content;
  border: 1px solid var(--dark-80, #DCDCDC);
  padding: 0.5rem;
  gap: 0.75rem;
}
.real-stories-slider-container .real-stories-slider__controls button {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  justify-content: center;
  padding: 0.5rem;
  -webkit-box-flex: 0;
  -ms-flex-positive: 0;
  flex-grow: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  background-color: var(--gray);
  -webkit-transition: 0.4s ease all;
  transition: 0.4s ease all;
  border-radius: 100%;
}
@media (hover: hover) {
  .real-stories-slider-container .real-stories-slider__controls button:hover {
    cursor: pointer;
    background-color: var(--dark-80);
  }
}
.real-stories-slider-container .real-stories-slider__controls button:focus-visible {
  background-color: var(--dark-80);
}
.real-stories-slider-container .real-stories-slider__controls .real-stories-slider__pagination {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  justify-content: center;
  gap: 0.5rem;
}
.real-stories-slider-container .real-stories-slider__controls .real-stories-slider__pagination .swiper-pagination-bullet {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  margin: 0;
  width: 0.5rem;
  height: 0.5rem;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  -webkit-box-flex: 0;
  -ms-flex-positive: 0;
  flex-grow: 0;
  background-color: #DCDCDC;
  -webkit-transition: 0.4s ease all;
  transition: 0.4s ease all;
}
.real-stories-slider-container .real-stories-slider__controls .real-stories-slider__pagination .swiper-pagination-bullet-active {
  background-color: var(--dark-100);
}

.real-stories-slide {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  padding: 2.5rem;
  gap: 1.5rem;
  border-radius: 1rem;
  background-color: var(--gray);
  border: 1 solid var(--gray);
}
@media (width <= 63.99875rem) {
  .real-stories-slide {
    padding: 1.5rem;
  }
}
.real-stories-slide .name {
  font-family: var(--inter);
  font-size: 0.75rem;
  font-style: normal;
  font-weight: 500;
  line-height: 100%;
  /* 22.1px */
  letter-spacing: 0.045rem;
  text-transform: uppercase;
  color: var(--dark-100);
}
.real-stories-slide .content {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
}
.real-stories-slide .content p {
  font-family: var(--inter);
  font-size: 1.0625rem;
  font-style: normal;
  font-weight: 500;
  line-height: 130%;
  /* 22.1px */
  letter-spacing: -0.010625rem;
  color: var(--dark-100);
  font-weight: 400;
}
.real-stories-slide .google {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  gap: 0.5rem;
}
.real-stories-slide .google img {
  width: 1.5rem;
  height: 1.5rem;
  -o-object-fit: scale-down;
  object-fit: scale-down;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}
.real-stories-slide .google .stars {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  gap: 0.125rem;
}

.got-question-desktop {
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: 1.25rem;
  position: relative;
}
@media (width <= 47.99875rem) {
  .got-question-desktop {
    display: none;
  }
}
.got-question-desktop .images__container {
  position: relative;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  height: calc(100dvh - 4.875rem - 3rem - 1rem - 1rem);
  position: sticky;
  top: calc(4.875rem + 3rem + 1rem);
  display: flex;
  flex-direction: column;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  justify-content: center;
}
.got-question-desktop .text__container {
  display: grid;
  grid-template-columns: repeat(6, 1fr);
  gap: 7.5rem 1.25rem;
  padding-top: 5rem;
  padding-bottom: 5rem;
}
.got-question-desktop .text__container .got-question-text-content {
  min-height: 100dvh;
}
.got-question-desktop .got-question__controls {
  position: absolute;
  width: 2rem;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  right: -2rem;
  height: 100%;
}
@media screen and (max-width: 76.25rem) {
  .got-question-desktop .got-question__controls {
    right: 2.5rem;
    -webkit-transform: translateX(50%);
    -ms-transform: translateX(50%);
    transform: translateX(50%);
  }
}
@media screen and (max-width: 64rem) {
  .got-question-desktop .got-question__controls {
    display: none;
  }
}
.got-question-desktop .got-question__controls .sticky {
  position: sticky;
  top: 50px;
  height: 100dvh;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  justify-content: center;
  gap: 0.75rem;
}
.got-question-desktop .got-question__controls .sticky button {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  justify-content: center;
  border-radius: 100%;
  background-color: var(--gray);
  width: 2rem;
  height: 2rem;
}
@media (hover: hover) {
  .got-question-desktop .got-question__controls .sticky button:hover {
    cursor: pointer;
    background-color: var(--dark-80);
  }
}
.got-question-desktop .got-question__controls .sticky button:focus-visible {
  background-color: var(--dark-80);
}

.got-question-desktop-image {
  position: absolute;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-box-align: end;
  -ms-flex-align: end;
  align-items: end;
  -webkit-box-pack: end;
  -ms-flex-pack: end;
  justify-content: end;
  z-index: 3;
  -webkit-transition: 0.4s ease all;
  transition: 0.4s ease all;
  opacity: 0;
  background: var(--dark-100);
  border-radius: 1rem;
  overflow: hidden;
  max-height: 44rem;
  width: 100%;
  height: 100%;
  background-color: var(--dark-100);
}
.got-question-desktop-image.active {
  opacity: 1;
}
.got-question-desktop-image .text {
  width: 100%;
  padding: 3.5rem;
  position: relative;
  z-index: 2;
  background: -webkit-gradient(linear, left bottom, left top, from(rgba(0, 0, 0, 0.56)), to(rgba(0, 0, 0, 0)));
  background: linear-gradient(0deg, rgba(0, 0, 0, 0.56) 0%, rgba(0, 0, 0, 0) 100%);
  -webkit-backdrop-filter: blur(0px);
  backdrop-filter: blur(0px);
}
.got-question-desktop-image .text h2 {
  color: var(--white);
}
.got-question-desktop-image img {
  position: absolute;
  width: 100%;
  height: 100%;
  z-index: 1;
  -o-object-fit: cover;
  object-fit: cover;
}

.got-question-text-content {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  gap: 2rem;
  grid-column: 2/span 5;
  padding-right: 5rem;
}
@media screen and (max-width: 64rem) {
  .got-question-text-content {
    grid-column: 1/span 6;
    padding-right: 0;
  }
}
@media (width <= 47.99875rem) {
  .got-question-text-content {
    gap: 1rem;
  }
}
.got-question-text-content .title {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}
.got-question-text-content .title h3 {
  font-family: var(--inter);
  font-size: 1.625rem;
  font-style: normal;
  font-weight: 500;
  line-height: 130%;
  /* 2.1125rem */
  letter-spacing: -0.04063rem;
  color: var(--dark-100);
}
.got-question-text-content .title .icon {
  display: none;
}
@media (width <= 47.99875rem) {
  .got-question-text-content .title .icon {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    -webkit-box-pack: center;
    -ms-flex-pack: center;
    justify-content: center;
    width: 2rem;
    height: 2rem;
    border-radius: 100%;
    background-color: var(--gray);
    -ms-flex-negative: 0;
    flex-shrink: 0;
  }
  .got-question-text-content .title .icon svg {
    -webkit-transition: 0.4s ease all;
    transition: 0.4s ease all;
    -webkit-transform-origin: center;
    -ms-transform-origin: center;
    transform-origin: center;
    -webkit-transform: rotate(180deg);
    -ms-transform: rotate(180deg);
    transform: rotate(180deg);
  }
}
.got-question-text-content .title.active .icon svg {
  -webkit-transform: rotate(0deg);
  -ms-transform: rotate(0deg);
  transform: rotate(0deg);
}
.got-question-text-content > p {
  color: var(--dark-100, #1E1E1E);
  /* Body M – Regular */
  font-family: var(--inter);
  font-size: 1.0625rem;
  font-style: normal;
  font-weight: 400;
  line-height: 130%;
  /* 1.38125rem */
  letter-spacing: -0.01063rem;
}
.got-question-text-content .ui-services-list-item .content .text h5 {
  color: var(--dark-100, #1E1E1E);
  font-size: 0.9375rem;
  font-style: normal;
  font-weight: 600;
  line-height: 130%;
  /* 1.21875rem */
  letter-spacing: -0.00938rem;
}
.got-question-text-content .ui-services-list-item .content .text p {
  color: var(--dark-90, #585858);
  /* Body S – Regular */
  font-family: var(--inter);
  font-size: 0.9375rem;
  font-style: normal;
  font-weight: 400;
  line-height: 130%;
  /* 1.21875rem */
  letter-spacing: -0.00938rem;
}
.got-question-text-content.mobile .dropdown {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  gap: 1.5rem;
}
.got-question-text-content.mobile .dropdown .text__container {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  gap: 1rem;
}
.got-question-text-content.mobile .dropdown .image__block {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  position: relative;
  overflow: hidden;
  height: 15rem;
  padding: 1.5rem;
  border-radius: 1rem;
  -webkit-box-pack: end;
  -ms-flex-pack: end;
  justify-content: end;
}
.got-question-text-content.mobile .dropdown .image__block h2 {
  position: absolute;
  z-index: 4;
  color: var(--white, #FFF);
  /* Mobile/H2 */
  font-family: var(--instrument);
  font-size: 36px;
  font-style: normal;
  font-weight: 400;
  line-height: 100%;
  /* 36px */
  letter-spacing: 0.36px;
  max-width: 14.5625rem;
}
.got-question-text-content.mobile .dropdown .image__block .toner {
  position: absolute;
  bottom: 0;
  z-index: 3;
  width: 100%;
  height: 3.4rem;
  left: 0;
  position: absolute;
  background: -webkit-gradient(linear, left bottom, left top, from(rgba(0, 0, 0, 0.56)), to(rgba(0, 0, 0, 0)));
  background: linear-gradient(0deg, rgba(0, 0, 0, 0.56) 0%, rgba(0, 0, 0, 0) 100%);
}
.got-question-text-content.mobile .dropdown .image__block img {
  position: absolute;
  width: 100%;
  height: 100%;
  left: 0;
  -o-object-fit: cover;
  object-fit: cover;
  top: 0;
}
.got-question-text-content.mobile .title {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: justify;
  -ms-flex-pack: justify;
  justify-content: space-between;
  gap: 1rem;
}

.got-question-mobile {
  display: none;
}
@media (width <= 47.99875rem) {
  .got-question-mobile {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
    -ms-flex-direction: column;
    flex-direction: column;
    gap: 1.5rem;
  }
}
.got-question-mobile .item {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  gap: 1.5rem;
}
.got-question-mobile .line {
  width: 100%;
  height: 0.09375rem;
  background-color: var(--gray);
}

.hiw-desktop {
  width: 100%;
  max-width: 97rem;
  margin-inline: auto;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
}
@media screen and (max-width: calc(97rem + 4rem + 4rem)) {
  .hiw-desktop {
    width: calc(100% - 4rem * 2);
  }
}
@media screen and (max-width: 76.25rem) {
  .hiw-desktop {
    width: calc(100% - 1rem * 2);
  }
}
@media (width <= 47.99875rem) {
  .hiw-desktop {
    display: none;
  }
}
.hiw-desktop .block {
  max-width: 52.88rem;
  margin-inline: auto;
  width: 100%;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  position: relative;
  --offset: 2.5rem;
  z-index: 2;
}
@media screen and (max-width: 64rem) {
  .hiw-desktop .block {
    --offset: 1rem;
    width: calc(100% - 2rem);
  }
}
.hiw-desktop .block::before {
  z-index: -1;
  content: "";
  position: absolute;
  height: calc(100% + var(--offset) + var(--offset));
  width: calc(100% + var(--offset) + var(--offset));
  left: calc(-1 * var(--offset));
  top: calc(-1 * var(--offset));
  background-color: var(--white);
  border-radius: 1rem;
}
.hiw-desktop .block .line {
  width: 100%;
  border-radius: 0.5rem;
  border: 1px solid var(--gray, #F6F6F6);
  background: var(--gray, #F6F6F6);
  margin-top: 2rem;
}

.hiw-item {
  display: grid;
  grid-template-columns: repeat(20, 1fr);
  gap: 1.25rem;
}
.hiw-item .title {
  grid-column: 1/span 9;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  gap: 1rem;
}
.hiw-item .title .icon {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  justify-content: center;
  border-radius: 4rem;
  border: 1px solid var(--green, #396B61);
  background: var(--white, #FFF);
  color: var(--green, #396B61);
  text-align: center;
  font-family: Inter;
  font-size: 0.9375rem;
  font-style: normal;
  font-weight: 500;
  line-height: 130%;
  width: 1.5rem;
  height: 1.5rem;
  text-align: center;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  /* 1.21875rem */
}
.hiw-item .title h4 {
  color: var(--dark-100, #1E1E1E);
  /* Body M – Bold */
  font-family: var(--inter);
  font-size: 1.0625rem;
  font-style: normal;
  font-weight: 600;
  line-height: 130%;
  /* 1.38125rem */
  letter-spacing: -0.01063rem;
}
.hiw-item .text {
  grid-column: 10/span 11;
}
.hiw-item .text p {
  color: var(--dark-90, #585858);
  /* Body M – Regular */
  font-size: 1.0625rem;
  font-style: normal;
  font-weight: 400;
  line-height: 130%;
  /* 1.38125rem */
  letter-spacing: -0.01063rem;
}
.hiw-item .text p a {
  text-decoration-line: underline;
  text-decoration-style: solid;
  -webkit-text-decoration-skip-ink: none;
  text-decoration-skip-ink: none;
  text-decoration-thickness: 8%;
  text-underline-offset: 12%;
  text-underline-position: from-font;
  color: var(--dark-100);
  font-weight: 600;
}
@media (hover: hover) {
  .hiw-item .text p a:hover {
    cursor: pointer;
    color: var(--dark-90);
  }
}
.hiw-item .text p a:focus-visible {
  color: var(--dark-90);
}

.hiw-mobile {
  display: none;
  width: 100%;
}
@media (width <= 47.99875rem) {
  .hiw-mobile {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
  }
}
.hiw-mobile .hiwSlider {
  width: 100%;
  position: relative;
}
.hiw-mobile .hiwSlider h2 {
  position: absolute;
  left: 2.5rem;
  top: 1.5rem;
  z-index: 2;
}
.hiw-mobile .hiwSlider .swiper-wrapper {
  border-radius: 16px;
}
.hiw-mobile .hiwSlider .swiper-wrapper .swiper-slide {
  background: var(--white, #FFF);
  width: calc(100vw - 1rem - 1.8125rem - 1.5rem);
  padding-top: 6rem;
  padding-left: 1.5rem;
  padding-bottom: 5rem;
  position: relative;
  z-index: 2;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  gap: 1.25rem;
}
.hiw-mobile .hiwSlider .swiper-wrapper .swiper-slide:first-child {
  border-radius: 1rem 0 0 1rem;
}
.hiw-mobile .hiwSlider .swiper-wrapper .swiper-slide:last-child {
  border-radius: 0 1rem 1rem 0;
  padding-right: 1.5rem;
}
.hiw-mobile .hiwSlider .swiper-wrapper .swiper-slide h4 {
  color: var(--dark-100, #1E1E1E);
  /* Body M – Bold */
  font-family: var(--inter);
  font-size: 1.0625rem;
  font-style: normal;
  font-weight: 600;
  line-height: 130%;
  /* 1.38125rem */
  letter-spacing: -0.01063rem;
}
.hiw-mobile .hiwSlider .swiper-wrapper .swiper-slide p {
  color: var(--dark-90, #585858);
  /* Body M – Regular */
  font-family: var(--inter);
  font-size: 1.0625rem;
  font-style: normal;
  font-weight: 400;
  line-height: 130%;
  /* 1.38125rem */
  letter-spacing: -0.01063rem;
}
.hiw-mobile .hiwSlider .hiw-pagination {
  position: absolute;
  left: 2.5rem;
  bottom: 1.5rem;
  z-index: 2;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  gap: 0.5rem;
}
.hiw-mobile .hiwSlider .hiw-pagination .swiper-pagination-bullet {
  margin: 0;
  width: 1.5rem;
  height: 1.5rem;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  justify-content: center;
  border-radius: 100%;
  border-radius: 4rem;
  border: 1px solid var(--green, #396B61);
  background-color: transparent;
  opacity: 1;
  color: var(--green, #396B61);
  text-align: center;
  font-family: Inter;
  font-size: 0.9375rem;
  font-style: normal;
  font-weight: 500;
  line-height: 130%;
  /* 1.21875rem */
  -webkit-transition: 0.4s ease all;
  transition: 0.4s ease all;
}
.hiw-mobile .hiwSlider .hiw-pagination .swiper-pagination-bullet-active {
  color: var(--white);
  background-color: var(--green);
}

.hero-page {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  position: relative;
  overflow: hidden;
  min-height: 100dvh;
  width: 100%;
}
.hero-page__container {
  width: 100%;
  max-width: 97rem;
  margin-inline: auto;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  position: relative;
  z-index: 10;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-box-flex: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
  padding-top: calc(4.25rem + 1rem);
  padding-bottom: calc(4.25rem + 1rem);
}
@media screen and (max-width: calc(97rem + 4rem + 4rem)) {
  .hero-page__container {
    width: calc(100% - 4rem * 2);
  }
}
@media screen and (max-width: 76.25rem) {
  .hero-page__container {
    width: calc(100% - 1rem * 2);
  }
}
@media (width <= 47.99875rem) {
  .hero-page__container {
    padding: 0;
    -webkit-box-pack: start;
    -ms-flex-pack: start;
    justify-content: start;
    padding-top: 5.5rem;
  }
}
.hero-page__container__grid {
  display: grid;
  grid-template-columns: 5fr 7fr;
  gap: 1.25rem;
}
@media screen and (max-width: 64rem) {
  .hero-page__container__grid {
    grid-template-columns: 1fr 1fr;
  }
}
@media (width <= 47.99875rem) {
  .hero-page__container__grid {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
    -ms-flex-direction: column;
    flex-direction: column;
    gap: 1.5rem;
    -webkit-box-flex: 1;
    -ms-flex-positive: 1;
    flex-grow: 1;
  }
}
.hero-page__container__grid .text {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
}
.hero-page__container__grid .text h1 {
  line-height: 5.0416875rem;
}
@media (width <= 47.99875rem) {
  .hero-page__container__grid .text h1 {
    line-height: 3rem;
  }
}
.hero-page__container__grid .text h4 {
  padding-right: 4.375rem;
  margin-top: 1.5rem;
}
@media (width <= 47.99875rem) {
  .hero-page__container__grid .text h4 {
    padding-right: 0;
    font-family: var(--inter);
    font-size: 1.0625rem;
    font-style: normal;
    font-weight: 500;
    line-height: 130%;
    /* 22.1px */
    letter-spacing: -0.010625rem;
    display: none;
  }
}
.hero-page__container__grid .text .links {
  margin-top: 2rem;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  gap: 1rem;
}
@media (width <= 47.99875rem) {
  .hero-page__container__grid .text .links {
    gap: 0;
    margin-top: 1.5rem;
  }
  .hero-page__container__grid .text .links .hero-book {
    display: none;
  }
}
.hero-page__container__grid .text .links .hero-book {
  width: -webkit-fit-content;
  width: -moz-fit-content;
  width: fit-content;
}
.hero-page__container__grid .mobile-text {
  display: none;
}
@media (width <= 47.99875rem) {
  .hero-page__container__grid .mobile-text {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
    -ms-flex-direction: column;
    flex-direction: column;
    gap: 1.5rem;
    margin-top: auto;
    padding-bottom: 1.5rem;
  }
}
.hero-page__container__grid .mobile-text h4 {
  font-family: var(--inter);
  font-size: 1.0625rem;
  font-style: normal;
  font-weight: 500;
  line-height: 130%;
  /* 22.1px */
  letter-spacing: -0.010625rem;
  -ms-flex-item-align: stretch;
  align-self: stretch;
}
.hero-page .image {
  position: absolute;
  inset: 0;
  width: 100%;
  height: 100%;
}
.hero-page .image .toner {
  position: absolute;
  left: -11.75rem;
  top: -3.75rem;
  height: calc(100% + 3.75rem);
  width: 84%;
  background: linear-gradient(115deg, rgba(0, 0, 0, 0.8) 0%, rgba(0, 0, 0, 0) 78.11%);
  -webkit-filter: blur(32px);
  filter: blur(32px);
  z-index: 2;
}
@media (width <= 47.99875rem) {
  .hero-page .image .toner {
    height: calc(100% + 2.75rem);
    left: -2.75rem;
    top: -2.75rem;
  }
}
.hero-page .image .toner-mob {
  display: none;
}
@media (width <= 47.99875rem) {
  .hero-page .image .toner-mob {
    display: block;
    width: 100%;
    height: 15.625rem;
    background: linear-gradient(25deg, rgba(0, 0, 0, 0.4) 0%, rgba(0, 0, 0, 0) 78.11%);
    position: absolute;
    z-index: 2;
    -webkit-filter: blur(32px);
    filter: blur(32px);
    bottom: 0;
  }
}
.hero-page .image img {
  width: 100%;
  height: 100%;
  position: absolute;
  -o-object-fit: cover;
  object-fit: cover;
  z-index: 1;
}

.about {
  --padding: 2.5rem;
  width: 100%;
  max-width: 97rem;
  margin-inline: auto;
  border-radius: 1.5rem;
  background-color: var(--gray);
  padding: var(--padding) 0;
  margin-top: 5rem;
  display: grid;
  grid-template-columns: repeat(12, 1fr);
  gap: 1.25rem;
}
@media screen and (max-width: calc(97rem + 4rem + 4rem)) {
  .about {
    width: calc(100% - 4rem * 2);
  }
}
@media screen and (max-width: 76.25rem) {
  .about {
    width: calc(100% - 1rem * 2);
  }
}
@media screen and (max-width: 76.25rem) {
  .about {
    padding: var(--padding);
  }
}
@media screen and (max-width: 64rem) {
  .about {
    --padding: 1.5rem;
    margin-top: 3.75rem;
  }
}
@media (width <= 47.99875rem) {
  .about {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
    -ms-flex-direction: column;
    flex-direction: column;
    gap: 1.5rem;
  }
}
.about .image__container {
  grid-column: 1/6;
  width: 100%;
  -webkit-transform: translateX(var(--padding));
  -ms-transform: translateX(var(--padding));
  transform: translateX(var(--padding));
  border-radius: 1rem;
  overflow: hidden;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  position: relative;
}
.about .image__container img {
  width: 100%;
  height: 100%;
  -o-object-fit: scale-down;
  object-fit: scale-down;
}
@media screen and (max-width: 76.25rem) {
  .about .image__container {
    -webkit-transform: none;
    -ms-transform: none;
    transform: none;
    grid-column: 1/7;
  }
}
.about .text__container {
  grid-column: 7/12;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  justify-content: center;
}
@media screen and (max-width: 76.25rem) {
  .about .text__container {
    grid-column: 7/13;
  }
}
@media (width <= 47.99875rem) {
  .about .text__container {
    padding: 0;
  }
}
.about .text__container .text {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  gap: 1rem;
  margin-top: 2.4375rem;
}
@media (width <= 47.99875rem) {
  .about .text__container .text {
    gap: 0.5rem;
    margin-top: 1.5rem;
  }
}
.about .text__container .text p b {
  color: var(--dark-100);
  font-weight: 600;
}
.about .text__container .credentials {
  margin-top: 1.5rem;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  gap: 0.75rem;
}
.about .text__container .credentials b {
  color: var(--dark-100);
  font-weight: 600;
}
@media (width <= 47.99875rem) {
  .about .text__container .credentials {
    margin-top: 1rem;
  }
}
.about .text__container .book {
  width: -webkit-fit-content;
  width: -moz-fit-content;
  width: fit-content;
  margin-top: 1.5rem;
}
@media (width <= 47.99875rem) {
  .about .text__container .book {
    width: 100%;
  }
}

.services {
  margin-top: 5rem;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
}
@media (width <= 47.99875rem) {
  .services {
    margin-top: 3.75rem;
  }
}
.services__title {
  width: 100%;
  max-width: 97rem;
  margin-inline: auto;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  gap: 0.75rem;
}
@media screen and (max-width: calc(97rem + 4rem + 4rem)) {
  .services__title {
    width: calc(100% - 4rem * 2);
  }
}
@media screen and (max-width: 76.25rem) {
  .services__title {
    width: calc(100% - 1rem * 2);
  }
}
.services__title h2 {
  color: var(--dark-100);
}
.services__title p {
  font-family: var(--inter);
  font-size: 1.0625rem;
  font-style: normal;
  font-weight: 500;
  line-height: 130%;
  /* 22.1px */
  letter-spacing: -0.010625rem;
  color: var(--dark-90);
  font-weight: 400;
}
.services__content {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  gap: 3.5rem;
  margin-top: 3.5rem;
}
@media (width <= 47.99875rem) {
  .services__content {
    gap: 2rem;
    margin-top: 2rem;
  }
}
.services__content .line {
  margin-inline: auto;
  width: 100%;
  max-width: 105rem;
  height: 0.09375rem;
  background-color: var(--gray);
}

.real-stories {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  margin-top: 5rem;
}
@media (width <= 47.99875rem) {
  .real-stories {
    margin-top: 3.75rem;
  }
}
.real-stories__title {
  width: 100%;
  max-width: 97rem;
  margin-inline: auto;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  gap: 0.75rem;
}
@media screen and (max-width: calc(97rem + 4rem + 4rem)) {
  .real-stories__title {
    width: calc(100% - 4rem * 2);
  }
}
@media screen and (max-width: 76.25rem) {
  .real-stories__title {
    width: calc(100% - 1rem * 2);
  }
}
.real-stories__title p {
  color: var(--dark-90, #585858);
  /* Body M – Regular */
  font-family: var(--inter);
  font-size: 1.0625rem;
  font-style: normal;
  font-weight: 400;
  line-height: 130%; /* 1.38125rem */
  letter-spacing: -0.01063rem;
}
.real-stories__line {
  width: 100%;
  max-width: 105rem;
  height: 0.09375rem;
  background-color: var(--gray);
  margin-top: 3.375rem;
  margin-inline: auto;
}
@media (width <= 47.99875rem) {
  .real-stories__line {
    margin-top: 2rem;
  }
}
.real-stories__rating {
  width: 100%;
  max-width: 97rem;
  margin-inline: auto;
  margin-top: 0.0625rem;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  gap: 1rem;
  -webkit-box-pack: end;
  -ms-flex-pack: end;
  justify-content: end;
}
@media screen and (max-width: calc(97rem + 4rem + 4rem)) {
  .real-stories__rating {
    width: calc(100% - 4rem * 2);
  }
}
@media screen and (max-width: 76.25rem) {
  .real-stories__rating {
    width: calc(100% - 1rem * 2);
  }
}
@media (width <= 47.99875rem) {
  .real-stories__rating {
    margin-top: 1.5rem;
    -webkit-box-pack: start;
    -ms-flex-pack: start;
    justify-content: start;
  }
}
.real-stories__rating .google {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  gap: 0.5rem;
}
.real-stories__rating .google img {
  width: 1.5rem;
  height: 1.5rem;
  -o-object-fit: scale-down;
  object-fit: scale-down;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}
.real-stories__rating .google .rate {
  font-family: var(--inter);
  font-size: 0.75rem;
  font-style: normal;
  font-weight: 500;
  line-height: 100%;
  /* 22.1px */
  letter-spacing: 0.045rem;
  text-transform: uppercase;
  color: var(--dark-100);
}
.real-stories__rating .google .stars {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  gap: 0.125rem;
}
.real-stories__rating .splitter {
  width: 0.09375rem;
  height: 0.75rem;
  background-color: var(--gray);
}
.real-stories__rating a {
  color: var(--dark-100);
  font-family: var(--inter);
  font-size: 1.0625rem;
  font-style: normal;
  font-weight: 500;
  line-height: 130%;
  /* 22.1px */
  letter-spacing: -0.010625rem;
  text-decoration: underline;
}
@media (hover: hover) {
  .real-stories__rating a:hover {
    cursor: pointer;
    color: var(--dark-90);
  }
}
.real-stories__rating a:focus-visible {
  color: var(--dark-90);
}

.prices {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  margin-top: 5rem;
  max-width: 105rem;
  width: 100%;
  margin-inline: auto;
  position: relative;
  background: var(--badge, #F6F2E5);
  overflow: hidden;
  padding: 5rem 0;
  border-radius: 0.25rem;
}
@media screen and (max-width: 105rem) {
  .prices {
    border-radius: 0;
  }
}
@media (width <= 47.99875rem) {
  .prices {
    margin-top: 3.75rem;
    padding: 2rem 0;
  }
}
.prices__grid {
  width: 100%;
  max-width: 97rem;
  margin-inline: auto;
  position: relative;
  z-index: 2;
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: 1.25rem;
}
@media screen and (max-width: calc(97rem + 4rem + 4rem)) {
  .prices__grid {
    width: calc(100% - 4rem * 2);
  }
}
@media screen and (max-width: 76.25rem) {
  .prices__grid {
    width: calc(100% - 1rem * 2);
  }
}
@media (width <= 47.99875rem) {
  .prices__grid {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
    -ms-flex-direction: column;
    flex-direction: column;
    gap: 1.75rem;
  }
}
.prices > svg {
  position: absolute;
  left: -4.375rem;
  top: -2.5625rem;
}
.prices__title {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
}
.prices__title .title__grid {
  display: grid;
  grid-template-columns: repeat(6, 1fr);
  gap: 0 1.25rem;
}
@media (width <= 47.99875rem) {
  .prices__title .title__grid {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
    -ms-flex-direction: column;
    flex-direction: column;
    gap: 0;
  }
}
.prices__title .title__grid h2 {
  grid-column: 1/span 6;
}
.prices__title .title__grid > p {
  grid-column: 1/span 4;
  color: var(--dark-90, #585858);
  font-family: var(--inter);
  font-size: 1.0625rem;
  font-style: normal;
  font-weight: 500;
  line-height: 130%;
  /* 22.1px */
  letter-spacing: -0.010625rem;
  margin-top: 0.75rem;
  font-weight: 400;
}
@media (width <= 47.99875rem) {
  .prices__title .title__grid > p {
    margin-top: 1.5rem;
  }
}
.prices__title .title__grid .full {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  grid-column: span 6;
  margin-top: 4rem;
}
@media (width <= 47.99875rem) {
  .prices__title .title__grid .full {
    margin-top: 1.5rem;
  }
}
.prices__title .title__grid .full h4 {
  font-family: var(--inter);
  font-size: 1.0625rem;
  font-style: normal;
  font-weight: 500;
  line-height: 130%;
  /* 22.1px */
  letter-spacing: -0.010625rem;
  font-weight: 500;
  color: var(--dark-100);
}
.prices__title .title__grid .full .availability__list {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  gap: 0.125rem;
  margin-top: 1rem;
}
.prices__title .title__grid .full .availability__list .item {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  gap: 0.5rem;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  justify-content: center;
  padding: 1rem 0;
  width: 3.5rem;
  border-radius: 0.5rem;
  background-color: var(--white);
  overflow: hidden;
}
@media (width <= 47.99875rem) {
  .prices__title .title__grid .full .availability__list .item {
    width: 3.125rem;
    padding: 0.75rem 0.25rem;
    gap: 0.25rem;
  }
}
.prices__title .title__grid .full .availability__list .item.semi {
  border: 1px solid var(--white);
  background-color: transparent;
  position: relative;
}
.prices__title .title__grid .full .availability__list .item.semi:before {
  content: "";
  position: absolute;
  width: 100%;
  height: 50%;
  left: 0;
  bottom: 0;
  background-color: var(--white);
}
.prices__title .title__grid .full .availability__list .item.last {
  border: 1px solid var(--dark-80);
  background-color: transparent;
}
.prices__title .title__grid .full .availability__list .item.last .day {
  opacity: 0.56;
}
.prices__title .title__grid .full .availability__list .item.last .time {
  opacity: 0.56;
}
.prices__title .title__grid .full .availability__list .item .day {
  color: var(--dark-100, #1E1E1E);
  text-align: center;
  font-family: Inter;
  font-size: 0.8125rem;
  font-style: normal;
  font-weight: 500;
  line-height: 130%;
  /* 1.05625rem */
  letter-spacing: -0.00813rem;
  position: relative;
  z-index: 2;
}
.prices__title .title__grid .full .availability__list .item .time {
  color: var(--dark-90, #585858);
  font-family: Inter;
  font-size: 0.625rem;
  font-style: normal;
  font-weight: 400;
  line-height: 130%;
  /* 0.8125rem */
  letter-spacing: -0.00625rem;
  position: relative;
  z-index: 2;
}
.prices__title .title__grid .full .description {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  gap: 0.5rem;
  margin-top: 0.75rem;
}
@media (width <= 47.99875rem) {
  .prices__title .title__grid .full .description {
    margin-top: 1rem;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
  }
}
.prices__title .title__grid .full .description svg {
  margin-top: 0.19rem;
}
@media (width <= 47.99875rem) {
  .prices__title .title__grid .full .description svg {
    margin-top: 0;
  }
}
.prices__title .title__grid .full .description p {
  color: var(--dark-90, #585858);
  /* Body M – Regular */
  font-family: var(--inter);
  font-size: 1.0625rem;
  font-style: normal;
  font-weight: 400;
  line-height: 130%;
  /* 1.38125rem */
  letter-spacing: -0.01063rem;
}
.prices__title .title__grid .link {
  margin-top: 1.6875rem;
  grid-column: 1/span 2;
  text-wrap: nowrap;
  min-width: -webkit-fit-content;
  min-width: -moz-fit-content;
  min-width: fit-content;
}
@media (width <= 47.99875rem) {
  .prices__title .title__grid .link {
    margin-top: 1.5rem;
    max-width: 15.125rem;
  }
}
.prices__list {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  padding: 2.5rem;
  border-radius: 1.5rem;
  background: rgba(255, 255, 255, 0.56);
  gap: 1.5rem;
}
@media (width <= 63.99875rem) {
  .prices__list {
    padding: 1.5rem;
  }
}
.prices__list .price__col {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  gap: 0.25rem;
}
.prices__list .price__col .price__item {
  padding: 2.5rem;
  border-radius: 1rem;
  background-color: var(--white);
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  gap: 1rem;
}
@media (width <= 63.99875rem) {
  .prices__list .price__col .price__item {
    padding: 1.5rem;
  }
}
.prices__list .price__col .price__item .title {
  color: var(--dark-100, #1E1E1E);
  /* Body M – Bold */
  font-size: 1.0625rem;
  font-style: normal;
  font-weight: 600;
  line-height: 130%;
  /* 1.38125rem */
  letter-spacing: -0.01063rem;
}
.prices__list .price__col .price__item .price {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: end;
  -ms-flex-align: end;
  align-items: end;
}
.prices__list .price__col .price__item .price .tags {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}
.prices__list .price__col .price__item .price .tags .tag {
  padding: 0.25rem 0.5rem;
  border-radius: 4rem;
  background: var(--badge, #F6F2E5);
  color: var(--dark-100, #1E1E1E);
  /* Body M – Regular */
  font-family: Inter;
  font-size: 1.0625rem;
  font-style: normal;
  font-weight: 400;
  line-height: 130%;
  /* 1.38125rem */
  letter-spacing: -0.01063rem;
}
.prices__list .price__col .price__item .price .tags .tag.online {
  background: rgba(190, 202, 245, 0.4);
}
.prices__list .price__col .price__item .price .tags .splitter {
  padding: 0.25rem 0.5rem;
  color: var(--dark-100, #1E1E1E);
  /* Body M – Regular */
  font-family: Inter;
  font-size: 1.0625rem;
  font-style: normal;
  font-weight: 400;
  line-height: 130%;
  /* 1.38125rem */
  letter-spacing: -0.01063rem;
}
.prices__list .price__col .price__item .price .line {
  -webkit-box-flex: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
  border-bottom: 1px dashed var(--dark-80);
}
.prices__list .price__col .price__item .price .money {
  color: var(--dark-100, #1E1E1E);
  text-align: right;
  font-size: 0.9375rem;
  font-style: normal;
  font-weight: 600;
  line-height: 130%;
  /* 1.21875rem */
  letter-spacing: -0.00938rem;
}
.prices__list .price__col .price__item .duration {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: justify;
  -ms-flex-pack: justify;
  justify-content: space-between;
  gap: 1rem;
}
@media (width <= 47.99875rem) {
  .prices__list .price__col .price__item .duration {
    -webkit-box-pack: start;
    -ms-flex-pack: start;
    justify-content: start;
  }
}
.prices__list .price__col .price__item .duration .time-text {
  color: var(--dark-90, #585858);
  /* Body M – Regular */
  font-family: Inter;
  font-size: 1.0625rem;
  font-style: normal;
  font-weight: 400;
  line-height: 130%;
  /* 1.38125rem */
  letter-spacing: -0.01063rem;
}
@media (width <= 47.99875rem) {
  .prices__list .price__col .price__item .duration .time-text.desktop {
    display: none;
  }
}
.prices__list .price__col .price__item .duration .time-text.mobile {
  display: none;
}
@media (width <= 47.99875rem) {
  .prices__list .price__col .price__item .duration .time-text.mobile {
    display: block;
  }
}
.prices__list .prices__description {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  gap: 0.5rem;
}
.prices__list .prices__description p {
  color: var(--dark-90, #585858);
  /* Body M – Regular */
  font-family: Inter;
  font-size: 1.0625rem;
  font-style: normal;
  font-weight: 400;
  line-height: 130%;
  /* 1.38125rem */
  letter-spacing: -0.01063rem;
}

.got-questions {
  margin-top: 5rem;
  position: relative;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
}
@media (width <= 47.99875rem) {
  .got-questions {
    margin-top: 3.75rem;
  }
}
.got-questions__title {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  gap: 0.75rem;
  width: 100%;
  max-width: 97rem;
  margin-inline: auto;
}
@media screen and (max-width: calc(97rem + 4rem + 4rem)) {
  .got-questions__title {
    width: calc(100% - 4rem * 2);
  }
}
@media screen and (max-width: 76.25rem) {
  .got-questions__title {
    width: calc(100% - 1rem * 2);
  }
}
.got-questions__title p {
  color: var(--dark-90);
  font-weight: 400;
}
.got-questions .nav__container {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  width: 100%;
  margin-top: 2rem;
}
@media (width <= 47.99875rem) {
  .got-questions .nav__container {
    display: none;
  }
}
.got-questions__nav {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  max-width: 97rem;
  width: 100%;
  margin-inline: auto;
  gap: 0.75rem;
  position: relative;
  z-index: 20;
  overflow: auto;
  scrollbar-width: none;
  -ms-overflow-style: none;
}
@media screen and (max-width: 105rem) {
  .got-questions__nav {
    width: calc(100% - 8rem);
  }
}
@media screen and (max-width: 76.25rem) {
  .got-questions__nav {
    width: calc(100% - 2rem);
  }
}
.got-questions__nav::-webkit-scrollbar {
  display: none;
}
.got-questions__nav a {
  -ms-flex-negative: 0;
  flex-shrink: 0;
  text-wrap: nowrap;
  padding: 0.75rem 1.5rem;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  justify-content: center;
  align-items: center;
  width: -webkit-fit-content;
  width: -moz-fit-content;
  width: fit-content;
  border-radius: 4rem;
  border: 1.5px solid var(--Dark-80, #DCDCDC);
  text-decoration: none;
  color: var(--dark-100, #1E1E1E);
  /* Body M – Medium */
  font-family: Inter;
  font-size: 1.0625rem;
  font-style: normal;
  font-weight: 500;
  line-height: 130%;
  /* 1.38125rem */
  letter-spacing: -0.01063rem;
  -webkit-transition: 0.4s ease all;
  transition: 0.4s ease all;
  background-color: var(--white);
}
@media (hover: hover) {
  .got-questions__nav a:hover {
    cursor: pointer;
    background-color: var(--purple);
    border-color: var(--purple);
  }
}
.got-questions__nav a:focus-visible {
  background-color: var(--purple);
  border-color: var(--purple);
}
.got-questions__nav a.active {
  background-color: var(--purple);
  border-color: var(--purple);
}
.got-questions__slider__container {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  width: 100%;
  max-width: 97rem;
  margin-inline: auto;
  margin-top: 3.5rem;
}
@media screen and (max-width: calc(97rem + 4rem + 4rem)) {
  .got-questions__slider__container {
    width: calc(100% - 4rem * 2);
  }
}
@media screen and (max-width: 76.25rem) {
  .got-questions__slider__container {
    width: calc(100% - 1rem * 2);
  }
}
@media (width <= 47.99875rem) {
  .got-questions__slider__container {
    margin-top: 2rem;
  }
}
.got-questions .contact-me {
  width: 100%;
  max-width: 97rem;
  margin-inline: auto;
  margin-top: 5rem;
  display: grid;
  grid-template-columns: repeat(12, 1fr);
  gap: 1.25rem;
}
@media screen and (max-width: calc(97rem + 4rem + 4rem)) {
  .got-questions .contact-me {
    width: calc(100% - 4rem * 2);
  }
}
@media screen and (max-width: 76.25rem) {
  .got-questions .contact-me {
    width: calc(100% - 1rem * 2);
  }
}
@media (width <= 47.99875rem) {
  .got-questions .contact-me {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
    -ms-flex-direction: column;
    flex-direction: column;
    margin-top: 1.5rem;
  }
}
.got-questions .contact-me p {
  grid-column: 8/span 5;
  color: var(--dark-100, #1E1E1E);
  /* Body M – Regular */
  font-family: Inter;
  font-size: 1.0625rem;
  font-style: normal;
  font-weight: 400;
  line-height: 130%;
  /* 1.38125rem */
  letter-spacing: -0.01063rem;
}
@media screen and (max-width: 64rem) {
  .got-questions .contact-me p {
    grid-column: 7/span 6;
  }
}
.got-questions .contact-me p a {
  text-decoration: underline;
}
@media (hover: hover) {
  .got-questions .contact-me p a:hover {
    cursor: pointer;
    color: var(--dark-90);
  }
}
.got-questions .contact-me p a:focus-visible {
  color: var(--dark-90);
}

.how-it-work {
  max-width: 105rem;
  width: 100%;
  margin-inline: auto;
  padding: 5rem 0;
  position: relative;
  margin-top: 5rem;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
}
@media (width <= 47.99875rem) {
  .how-it-work {
    margin-top: 3.75rem;
    min-height: 42.5rem;
    -webkit-box-pack: center;
    -ms-flex-pack: center;
    justify-content: center;
    padding: 0;
  }
}
.how-it-work .img {
  position: absolute;
  width: 100%;
  height: 100%;
  left: 0;
  top: 0;
}
.how-it-work .img img {
  width: 100%;
  height: 100%;
  -o-object-fit: cover;
  object-fit: cover;
}
.how-it-work .how-it-works__content {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  width: 100%;
  position: relative;
  z-index: 2;
}
.how-it-work .how-it-works__content .list {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  gap: 1.5rem;
}

.modal-text-popup {
  overflow: hidden;
  width: 100%;
  height: 100dvh;
  z-index: 10000000;
  background-color: var(--white);
  position: fixed;
  inset: 0;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  height: 100dvh;
  overflow: hidden;
}
.modal-text-popup .close-text-popup {
  width: 2rem;
  height: 2rem;
  border-radius: 100%;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  justify-content: center;
  background-color: var(--gray);
  position: absolute;
  right: 1rem;
  top: 1rem;
  z-index: 2;
  -webkit-transition: 0.4s ease all;
  transition: 0.4s ease all;
}
@media (hover: hover) {
  .modal-text-popup .close-text-popup:hover {
    cursor: pointer;
    background: var(--dark-80);
  }
}
.modal-text-popup .close-text-popup:focus-visible {
  background: var(--dark-80);
}
.modal-text-popup .modal-text-popup__content > [data-simplebar] {
  max-height: 100dvh;
}
.modal-text-popup__content {
  -webkit-box-flex: 1;
  -ms-flex: 1;
  flex: 1;
  min-height: 0;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
}
.modal-text-popup__content .simplebar-track.simplebar-vertical {
  top: 8rem;
  bottom: 8rem;
  width: 0.375rem;
  right: 0.25rem;
}
.modal-text-popup__content .simplebar-scrollbar.simplebar-visible::before {
  background-color: var(--dark-80);
  opacity: 1;
  inset: 0;
}
.modal-text-popup__content .modal-text-popup__container {
  width: 100%;
  max-width: 47.875rem;
  margin-inline: auto;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  gap: 3.75rem;
  padding: 8rem 0;
}
@media screen and (max-width: calc(47.875rem + 4rem + 4rem)) {
  .modal-text-popup__content .modal-text-popup__container {
    width: calc(100% - 4rem * 2);
  }
}
@media screen and (max-width: 76.25rem) {
  .modal-text-popup__content .modal-text-popup__container {
    width: calc(100% - 1rem * 2);
  }
}
@media (width <= 47.99875rem) {
  .modal-text-popup__content .modal-text-popup__container {
    padding: 3.75rem 0;
    gap: 2rem;
  }
}
.modal-text-popup__content .text__blocks {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
}
.modal-text-popup__content .text__blocks p,
.modal-text-popup__content .text__blocks li {
  color: var(--dark-100, #1E1E1E);
  /* Body M – Regular */
  font-family: var(--inter);
  font-size: 1.0625rem;
  font-style: normal;
  font-weight: 400;
  line-height: 130%;
  /* 1.38125rem */
  letter-spacing: -0.01063rem;
}
.modal-text-popup__content .text__blocks h3 {
  color: var(--dark-100, #1E1E1E);
  /* Body M – Bold */
  font-family: var(--inter);
  font-size: 1.0625rem;
  font-style: normal;
  font-weight: 600;
  line-height: 130%;
  letter-spacing: -0.01063rem;
  margin-top: 1.375rem;
}
@media (width <= 47.99875rem) {
  .modal-text-popup__content .text__blocks h3 {
    margin-top: 1rem;
  }
}
.modal-text-popup__content .text__blocks ul {
  list-style-type: none;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
}
.modal-text-popup__content .text__blocks ul li {
  position: relative;
  display: -webkit-inline-box;
  display: -ms-inline-flexbox;
  display: inline-flex;
  gap: 0.3125rem;
}
.modal-text-popup__content .text__blocks ul li::before {
  content: "•";
  color: var(--dark-100, #1E1E1E);
  font-family: var(--inter);
  font-size: inherit;
  font-style: inherit;
  font-weight: inherit;
  line-height: inherit;
  letter-spacing: inherit;
}

.ui-btn {
  padding: 0.75rem 1.5rem;
  background-color: var(--purple);
  border-radius: 4rem;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  justify-content: center;
  font-family: var(--inter);
  font-size: 1.0625rem;
  font-style: normal;
  font-weight: 500;
  line-height: 130%;
  letter-spacing: -0.010625rem;
  color: var(--dark-100);
  text-wrap: nowrap;
}
@media (hover: hover) {
  .ui-btn:hover {
    cursor: pointer;
    background-color: #A4B1E2;
  }
}
.ui-btn:focus-visible {
  background-color: #A4B1E2;
}

.ui-ul {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  list-style-type: none;
  padding: 0;
  width: 100%;
  gap: 0.25rem;
}
.ui-ul li {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  gap: 0.75rem;
}
.ui-ul li svg {
  -ms-flex-negative: 0;
  flex-shrink: 0;
  margin-top: 0.5rem;
  width: 0.5rem;
  height: 0.5rem;
}

.ui-line {
  width: 100%;
  max-width: 105rem;
  height: 0.09375rem;
  background-color: var(--gray);
  margin-top: 4.0625rem;
  margin-inline: auto;
}
@media (width <= 47.99875rem) {
  .ui-line {
    display: none;
  }
}

.ui-services-list {
  --gap: 1rem;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  list-style-type: none;
  gap: var(--gap);
}

.ui-services-list-item {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  gap: var(--gap);
}
.ui-services-list-item:last-child .line {
  display: none;
}
.ui-services-list-item .content {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  gap: 1rem;
}
.ui-services-list-item .content .icon {
  width: 1.5rem;
  height: 1.5rem;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  justify-content: center;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  border-radius: 4rem;
  border-radius: 64px;
  border: 1px solid var(--green, #396B61);
}
.ui-services-list-item .content .text {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  gap: 0.75rem;
}
.ui-services-list-item .content .text h5 {
  color: var(--dark-100);
  font-weight: 600;
  font-family: var(--inter);
  font-size: 1.0625rem;
  font-style: normal;
  font-weight: 500;
  line-height: 130%;
  /* 22.1px */
  letter-spacing: -0.010625rem;
}
.ui-services-list-item .content .text p {
  font-family: var(--inter);
  font-size: 1.0625rem;
  font-style: normal;
  font-weight: 500;
  line-height: 130%;
  /* 22.1px */
  letter-spacing: -0.010625rem;
  color: var(--dark-90);
  font-weight: 400;
}
.ui-services-list-item .line {
  width: 100%;
  height: 0.09375rem;
  background-color: var(--gray);
}

.anchor {
  min-height: 300dvh;
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
